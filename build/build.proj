<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="CIBuild">

  <PropertyGroup>
    <BuildConfiguration>Debug</BuildConfiguration>

    <RootDir>$([System.IO.Path]::GetFullPath("$(MSBuildThisFileDirectory)..\"))</RootDir>
    <SoultionDir>$(RootDir)src\</SoultionDir>
    <PackagesDir>$(SoultionDir)packages\</PackagesDir>
    <NugetDir>$(SoultionDir).nuget\</NugetDir>
    <BinDir>$(RootDir)bin\</BinDir>

    <SolutionPackagesFile>$(NugetDir)packages.config</SolutionPackagesFile>
    <GitVersionTaskPackageVersion>4.0.0-beta0009</GitVersionTaskPackageVersion>
    <NUnitExe>$(PackagesDir)NUnit.ConsoleRunner.3.5.0\tools\nunit3-console.exe</NUnitExe>
    <NugetExe>$(SoultionDir).nuget\nuget.exe</NugetExe>
    <NuspecFile>$(MSBuildFileThisDirectory)Allow2.nuspec</NuspecFile>
  </PropertyGroup>

  <Target Name="CIBuild" DependsOnTargets="$(CIBuild_DependsOn)"/>
  <Target Name="Publish" DependsOnTargets="$(Publish_DependsOn)"/>

  <ItemGroup>
    <Solution Include="$(SoultionDir)Allow2.sln"/>
  </ItemGroup>

  <Import Project="$(PackagesDir)GitVersionTask.$(GitVersionTaskPackageVersion)\build\GitVersionTask.targets"/>

  <PropertyGroup>
    <CIBuild_DependsOn>
      RestoreSolutionPackages;
      GetVersion;   <!-- from GitVersionTask.targets -->
      Describe;     <!-- self-documenting -->
      Build;        <!-- Step 1 -->
      RunTests;     <!-- Step 2 -->
      BuildPackage; <!-- Step 3 -->
    </CIBuild_DependsOn>
    <Publish_DependsOn>
      PublishPackage;
    </Publish_DependsOn>
  </PropertyGroup>

  <Target Name="Describe" DependsOnTargets="GetVersion">
    <Message Text="             RootDir: $(RootDir)"/>
    <Message Text="           SourceDir: $(SoultionDir)"/>
    <Message Text="          PackageDir: $(PackagesDir)"/>
    <Message Text="              BinDir: $(BinDir)"/>
    <Message Text=" "/>
    <Message Text="  BuildConfiguration: $(BuildConfiguration)"/>
    <Message Text="          BranchName: $(GitVersion_BranchName)"/>
    <Message Text="       PreReleaseTag: $(GitVersion_PreReleaseTag)"/>
    <Message Text=" "/>
    <Message Text="      AssemblySemVer: $(GitVersion_AssemblySemVer)"/>
    <Message Text="          FullSemVer: $(GitVersion_FullSemVer)"/>
    <Message Text="InformationalVersion: $(GitVersion_InformationalVersion)"/>
    <Message Text=" "/>
    <Message Text="        NugetVersion: $(GitVersion_NugetVersion)"/>
    <Message Text=" "/>
    <Message Text="##teamcity[setParameter name='NugetPackageVersion' value='$(GitVersion_NugetVersion)']"/>
  </Target>

  <Target Name="Build">
    <MSBuild Projects="%(Solution.Identity)"
             Targets="Rebuild"
             Properties="Configuration=$(BuildConfiguration);TreatWarningsAsErrors=True" />
  </Target>

  <Target Name="RunTests">
    <ItemGroup>
      <TestAssemblies Include="$(SoultionDir)Allow2.Specs\bin\$(BuildConfiguration)\Allow2.Specs.dll"/>
    </ItemGroup>

    <PropertyGroup>
      <cmd>"$(NunitExe)" @(TestAssemblies)</cmd>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TEAMCITY_VERSION)'==''">
      <cmd>$(cmd) --labels=All</cmd> <!-- we are not running in TC so lets' show a bit more output -->
    </PropertyGroup>

    <Exec Command="$(cmd)"/>
  </Target>

  <Target Name="RestoreSolutionPackages">
    <PropertyGroup>
      <cmd>"$(NugetExe)" restore "$(SolutionPackagesFile)" -packagesdirectory "$(PackagesDir)."</cmd>
    </PropertyGroup>
    <Exec Command="$(cmd)"/>
    <PropertyGroup>
      <cmd>"$(NugetExe)" restore "%(Solution.Identity)"</cmd>
    </PropertyGroup>
    <Exec Command="$(cmd)"/>
  </Target>

  <Target Name="EnsureBinExists">
    <MakeDir Directories="$(BinDir)" Condition="!Exists('$(BinDir)')"/>
  </Target>

  <Target Name="BuildPackage" DependsOnTargets="EnsureBinExists">
    <PropertyGroup>
      <cmd>"$(NugetExe)" pack "$(NuspecFile)" -Properties Configuration=$(BuildConfiguration) -Version $(GitVersion_NugetVersion)</cmd>
      <cmd>$(cmd) -OutputDirectory "$(BinDir.TrimEnd('\'))"</cmd>
    </PropertyGroup>

    <Exec Command="$(cmd)"/>
  </Target>

  <Target Name="PublishPackage" DependsOnTargets="GetVersion">
    <Error Condition="'$(NugetApiKey)'==''" Text="Must provide a value for %24(NugetApiKey) before pushing packages."/>

    <PropertyGroup>
      <cmd>"$(NugetExe)" push "$(BinDir)Allow2.$(GitVersion_NugetVersion).nupkg" $(NugetApiKey)</cmd>
    </PropertyGroup>

    <Exec Command="$(cmd)"/>
  </Target>

</Project>
